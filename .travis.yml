sudo: false

language: php

notifications:
  email:
    on_success: never
    on_failure: change

branches:
  only:
    - master

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

php:
  - 5.5
  - 5.6
  - 7.0

env:
  - WP_VERSION=latest WP_MULTISITE=0
  - WP_VERSION=4.7 WP_MULTISITE=0
  - WP_VERSION=4.6 WP_MULTISITE=0
  - WP_VERSION=4.5.3 WP_MULTISITE=0

matrix:
  include:
    - php: 5.5
      env: WP_VERSION=latest
    - php: 5.6
      env: WP_VERSION=latest
    - php: 7.0
      env: WP_VERSION=latest SNIFF=1

before_install:
  - if [[ "$SNIFF" == "1" ]]; export PHPCS_DIR=/tmp/phpcs; fi
  - if [[ "$SNIFF" == "1" ]]; export SNIFFS_DIR=/tmp/sniffs; fi
  # Install PHP CodeSniffer.
  - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/squizlabs/PHP_CodeSniffer.git $PHPCS_DIR; fi
  # Install WordPress Coding Standards.
  - if [[ "$SNIFF" == "1" ]]; then git clone -b master --depth 1 https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git $SNIFFS_DIR; fi
  # Set install path for WordPress Coding Standards.
  - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/scripts/phpcs --config-set installed_paths $SNIFFS_DIR; fi
  # After CodeSniffer install you should refresh your path.
  - if [[ "$SNIFF" == "1" ]]; then phpenv rehash; fi

install:
  - composer install

before_script:
  - bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION

script:
  - phpunit
  # Run against WordPress Coding Standards.
  - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/scripts/phpcs -p . --standard=WordPress; fi
